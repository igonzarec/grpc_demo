syntax = "proto3";

//a message allows us to represent different data structures
message Album {
  int32 id = 1; // type, name, number (1 - 15)
  string title = 2;
  repeated  Photo photos = 3;
}

message Photo {
  int32 albumId = 1;
  int32 id = 2;
  string title = 3;
  string url = 4;
}

service AlbumService {
  rpc getAlbums(AlbumRequest) returns (AlbumResponse); //Unary RPC
  rpc getAlbumsWithPhotos(AlbumRequest) returns (AlbumResponse); //Unary RPC
  rpc getPhotos(AlbumRequest) returns (stream Photo); //Server streaming
}

message AlbumRequest {
  int32 id = 1;
}

message AlbumResponse {
  repeated Album albums = 1;
}